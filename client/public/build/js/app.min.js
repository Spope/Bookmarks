var services=angular.module("bookmarkApp.services",[]),directives=angular.module("bookmarkApp.directives",[]),filters=angular.module("bookmarkApp.filters",[]),controllers=angular.module("bookmarkApp.controllers",[]),cacheModule=angular.module("bookmarkApp.cacheData",[]),bookmarkApp=angular.module("bookmarkApp",["bookmarkApp.directives","bookmarkApp.controllers","bookmarkApp.services","bookmarkApp.filters","bookmarkApp.cacheData"]);cacheModule.factory("resourceCache",["$cacheFactory",function($cacheFactory){return $cacheFactory("resourceCache")}]),directives.directive("addbookmark",["$window","$compile",function($window,$compile){return{restrict:"A",scope:{postbookmark:"&",loadbookmarks:"&",showadd:"=",categoryid:"=",parent:"="},link:function(scope,element){var template="";template+='<div class="category-add-bookmark">',template+="<form>",template+="<label>",template+='<input type="radio" name="bookmark_type_id" value="1" ng-model="newBookmark.bookmark_type_id" />Bookmark',template+="</label>",template+="<label>",template+='<input type="radio" name="bookmark_type_id" value="2" ng-model="newBookmark.bookmark_type_id" />Folder',template+="</label>",template+='<input class="input-add-bookmark input-add-bookmark-url" type="url" ng-required ng-model="newBookmark.url" placeholder="url" />',template+='<input class="input-add-bookmark input-add-bookmark-name" type="text" ng-required ng-model="newBookmark.name" placeholder="name" ng-show="false" />',template+='<button class="btn-add-bookmark btn-add-bookmark-url" type="button">Add</button>',template+='<button class="btn-add-bookmark btn-add-bookmark-name" type="button" ng-show="false">Add</button>',template+="</form>",template+='<div class="clr"></div>',template+="</div>",scope.newBookmark={bookmark_type_id:1,url:"",name:""};var $inputUrl,$inputName,$btnUrl,$form;scope.$watch("showadd",function(){scope.showadd?(element.append($compile(template)(scope)),$inputUrl=element.find(".input-add-bookmark-url"),$inputName=element.find(".input-add-bookmark-name"),$btnUrl=element.find(".btn-add-bookmark-url"),$btnName=element.find(".btn-add-bookmark-name"),$form=element.find(".category-add-bookmark"),$form.stop(),$form.slideDown(100,function(){$(".categories-list").isotope("shiftColumnOfItem",element.closest(".category-li")[0])}),$($window).bind("keydown",function(e){27===e.keyCode&&resetForm()}),$form.find("input[name='bookmark_type_id']:radio").bind("click",function(e){1==e.target.value&&scope.$apply(function(){$inputUrl.show().focus(),$btnUrl.show(),$inputName.hide(),$btnName.hide()}),2==e.target.value&&scope.$apply(function(){scope.newBookmark.url="",$inputUrl.hide(),$btnUrl.hide(),$inputName.show().focus(),$btnName.show()})}),bindUrl(),bindName()):resetForm(!0)});var bindUrl=function(){$inputUrl.focus().unbind("keypress").bind("keypress",function(e){13===e.keyCode&&$inputUrl[0].checkValidity()&&(e.preventDefault(),$inputUrl.hide(),$btnUrl.hide(),$inputName.show().focus(),$btnName.show())}),$inputUrl.bind("paste",function(){var $el=$(this);setTimeout(function(){var val=$el.val();val.length>6&&"http://"!=val.substr(0,7)&&"https://"!=val.substr(0,8)&&$el.val("http://"+val),$el.trigger("input")},100)}),$btnUrl.bind("click",function(){$inputUrl[0].checkValidity()&&($inputUrl.hide(),$btnUrl.hide(),$inputName.show().focus(),$btnName.show())})},bindName=function(){$inputName.unbind("keypress").bind("keypress",function(e){return 13===e.keyCode?(e.preventDefault(),sendBook(),!1):void 0}),$btnName.bind("click",function(){sendBook()})},sendBook=function(){return scope.$apply(),scope.parent&&(scope.newBookmark.parent=scope.parent.id),scope.newBookmark.category_id=scope.categoryid,scope.postbookmark({newBookmark:scope.newBookmark,callback:function(){resetForm(),scope.loadbookmarks()}}),!1},resetForm=function(apply){$form&&($form.stop(),$form.slideUp(100,function(){$(".categories-list").isotope("shiftColumnOfItem",element.closest(".category-li")[0]),$form.remove(),scope.showadd=!1,scope.newBookmark={bookmark_type_id:1,url:"",name:""},apply||($($window).unbind("keydown"),scope.$apply())}))}}}}]),directives.directive("bookmarkel",["$compile",function($compile){return{restrict:"A",link:function(scope,element,attrs){var template="";if(1==scope.bookmark.bookmark_type_id&&(template+='<a class="url-bookmark" ng-href="{{bookmark.url}}" target="_blank" title="{{bookmark.name}}">',template+='<img ng-src="http://placehold.it/16x16" height="16" width="16" />',template+="{{bookmark.name|truncate:24}}",template+="</a>"),2==scope.bookmark.bookmark_type_id&&(template+='<a class="url-bookmark" href="" title="{{bookmark.name}}" ng-click="setParent(bookmark)">',template+='<img src="/img/bookmark/folder.png" />',template+="{{bookmark.name|truncate:24}}",template+="</a>"),element.append($compile(template)(scope)),""==attrs.bookmarkel){var editBtn='<a class="btn-edit-bookmark pointer" ng-click="editBookmark(bookmark)">';editBtn+='<img src="/img/bookmark/pen.png" width="16" height="16" />',editBtn+="</a>",element.bind("mouseenter",function(){element.children(".url-bookmark").stop().animate({paddingLeft:20},200,function(){element.find(".url-bookmark").before($compile(editBtn)(scope)),element.children(".url-bookmark").css("padding-left","0px")})}),element.bind("mouseleave",function(){element.find(".btn-edit-bookmark")[0]&&(element.find(".btn-edit-bookmark").remove(),element.children(".url-bookmark").css("padding-left","20px")),element.children(".url-bookmark").stop().animate({paddingLeft:0},200)}),element.bind("mouseup",function(){})}}}}]),cacheModule.directive("preloadResource",["resourceCache",function(resourceCache){return{restrict:"A",link:function(scope,element,attrs){resourceCache.put(attrs.preloadResource,element.html())}}}]),directives.directive("categoryedit",function(){return{restrict:"A",link:function(scope,elm){elm.bind("dblclick",function(){elm.attr("contentEditable",!0),elm.addClass("editing"),elm.focus(),elm.blur(function(e){cancelEdit(e,scope.category)}),elm.bind("keypress",function(e){if(27===e.keyCode)return elm.blur(),!0;if(13===e.keyCode){var name=elm.html();return""!=name&&(scope.category.name=elm.html(),scope.saveCategory(scope.category).then(function(){elm.blur()})),!1}})}),cancelEdit=function(event,category){event.target.contentEditable=!1,$(event.target).removeClass("editing"),$(event.target).unbind("blur keypress"),$(event.target).html(category.name)}}}}),directives.directive("mansory",["$timeout",function($timeout){return{restrict:"A",link:function(scope,element,attrs){var options={layoutMode:"masonryColumnShift",masonry:{gutterWidth:10}};attrs.mansory&&(options.masonry.columnWidth=parseInt(attrs.mansory)),scope.mansory=function(){$timeout(function(){element.hasClass("isotope")?element.isotope("reloadItems").isotope(options):element.isotope(options)})}}}}]),directives.directive("pwCheck",[function(){return{require:"ngModel",link:function(scope,elem,attrs,ctrl){var firstPassword="#"+attrs.pwCheck;elem.add(firstPassword).on("keyup",function(){scope.$apply(function(){var v=elem.val()===$(firstPassword).val();ctrl.$setValidity("pwmatch",v)})})}}}]),directives.directive("searchengineshortcut",["$document","$timeout",function($document,$timeout){return{restrict:"E",scope:{searchengines:"=",hint:"=",submit:"&"},link:function(scope){var corresp={1:[49],2:[50],3:[51],4:[52],5:[53],6:[54],7:[55],8:[56],9:[57]};$document[0].onkeydown=function(e){if(e.ctrlKey){for(var i in corresp)if(e.ctrlKey&&corresp[i].indexOf(e.keyCode)>-1)return e.preventDefault(),scope.searchengines[i-1]&&(scope.submit({searchEngine:scope.searchengines[i-1]}),$timeout(function(){$(".input-search:visible").focus()})),!1;17==e.keyCode&&(scope.$apply(function(){scope.hint=!0}),$timeout(function(){scope.$apply(function(){scope.hint=!1})},3e3))}else scope.$apply(function(){scope.hint=!1})},$document[0].onkeyup=function(e){17==e.keyCode&&scope.$apply(function(){scope.hint=!1})}}}}]),directives.directive("sortable",["BookmarkService","modalService",function(BookmarkService){return{restrict:"A",link:function(scope,element,attrs){element.sortable({items:"li:not(.bookmark-back)",connectWith:"."+attrs.sortable,helper:"clone",zIndex:999999,containment:".categories-list-general",cursorAt:{left:50,top:10},sort:function(event,ui){var userAgent=navigator.userAgent.toLowerCase();userAgent.match(/chrome/)&&ui.helper.css("top",ui.position.top+jQuery(window).scrollTop()+"px")},start:function(e){$(".bin, .favoritesEmpty").addClass("visible"),scope.sorting=!0,$(".category-li").css("z-index",1),$(e.target).closest(".category-li").css("z-index",2),element.sortable("refreshPositions")},stop:function(e,ui){if(this===ui.item.parent()[0]){var id=ui.item.data("bookmark");scope.bookmark=BookmarkService.get(id);var oldPosition=scope.bookmark.position;setNewOrder(ui),scope.bookmark.position!=oldPosition&&scope.$apply(attrs.save).then(function(){var parent=BookmarkService.getParent(scope.bookmark);BookmarkService.getByCategory(scope.bookmark.category_id,parent,!1)})}$(".bin, .favoritesEmpty").removeClass("visible"),scope.sorting=!1,$(".category-li").css("z-index",1)},remove:function(e){e.stopPropagation()},receive:function(e,ui){e.stopPropagation();var id=ui.item.data("bookmark");if($(ui.item).parent().hasClass("bin")){var bookmark=BookmarkService.get(id);scope.deleteBookmark=bookmark,scope.$apply(attrs.remove),$(ui.item).remove()}else{if(scope.bookmark=BookmarkService.get(id),scope.category.id==scope.favorite.id&&1!=scope.bookmark.bookmark_type_id)return $(ui.sender).sortable("cancel"),!1;scope.bookmark.category_id=scope.category.id;var parent;scope.currentParent&&(parent=scope.currentParent.id),scope.bookmark.parent=parent,setNewOrder(ui),scope.$apply(attrs.save).then(function(){ui.sender.scope().loadBookmarks(!1)})}},over:function(e){$(e.target).hasClass("bin")?$(".bin").addClass("opened"):$(".bin").removeClass("opened")}});var setNewOrder=function(ui){var list=ui.item.parent().children("li:not(.bookmark-back)").toArray(),id=ui.item.data("bookmark");for(var index in list)list[index].getAttribute("data-bookmark")==id&&(scope.bookmark.position=parseInt(index))}}}}]),directives.directive("typeahead",["$window",function(){var template="<div>";return template+='<input type="text" class="input-search input-search-bookmarks" autocomplete="off" ng-model="term" ng-change="query()" />',template+="<div ng-transclude></div>",template+="</div>",{restrict:"E",transclude:!0,template:template,scope:{search:"&",focus:"&",blur:"&",select:"=",items:"=",term:"="},controller:["$scope",function($scope){this.activate=function(item){$scope.active=item},this.activateFirstItem=function(){$scope.items&&$scope.items[0]&&this.activate($scope.items[0])},this.activateNextItem=function(){var index=$scope.items.indexOf($scope.active);this.activate($scope.items[(index+1)%$scope.items.length])},this.activatePreviousItem=function(){var index=$scope.items.indexOf($scope.active);this.activate($scope.items[0===index?$scope.items.length-1:index-1])},this.isActive=function(item){return $scope.active===item},this.selectActive=function(){this.select($scope.active)},this.select=function(item){$scope.hide=!0,$scope.focused=!0,$scope.select(item)},$scope.isVisible=function(){return!$scope.hide&&($scope.focused||$scope.mousedOver)&&$scope.items&&$scope.items.length>0},$scope.query=function(){$scope.hide=!1,$scope.search({term:$scope.term})}}],link:function(scope,element,attrs,controller){var $input=element.find("input.input-search"),$list=element.find("ul.search-bookmark-results-list");$input.bind("focus",function(){scope.focused=!0,scope.focus()}),$input.bind("blur",function(){scope.focused=!1,scope.blur()}),$input.bind("keyup",function(e){(9===e.keyCode||13===e.keyCode)&&scope.$apply(function(){controller.selectActive()}),27===e.keyCode&&scope.$apply(function(){scope.hide=!0});var keys=[9,13,27,38,40];-1==keys.indexOf(e.keyCode)&&scope.$apply(function(){controller.activateFirstItem()})}),$input.bind("keydown",function(e){(9===e.keyCode||13===e.keyCode||27===e.keyCode)&&e.preventDefault(),40===e.keyCode&&(e.preventDefault(),scope.$apply(function(){controller.activateNextItem()})),38===e.keyCode&&(e.preventDefault(),scope.$apply(function(){controller.activatePreviousItem()}))}),scope.$watch("isVisible()",function(visible){if(visible){var pos=$input.position(),height=$input[0].offsetHeight;$list.css({top:pos.top+height,left:pos.left,position:"absolute",display:"block"})}else $list.css("display","none")})}}}]),directives.directive("typeaheadItem",[function(){return{require:"^typeahead",link:function(scope,element,attrs,controller){var item=scope.$eval(attrs.typeaheadItem);scope.$watch(function(){return controller.isActive(item)},function(active){active?element.addClass("active"):element.removeClass("active")}),element.bind("mouseenter",function(){scope.$apply(function(){controller.activate(item)})}),element.bind("click",function(){scope.$apply(function(){controller.select(item)})})}}}]),filters.filter("removeHTTP",function(){return function(text){return text.replace("http://","").replace("www.","")}}),filters.filter("truncate",function(){return function(text,length,end){return text=String(text),isNaN(length)&&(length=10),void 0===end&&(end="..."),text.length<=length||text.length-end.length<=length?text:String(text).substring(0,length-end.length)+end}}),services.factory("AuthService",[function(){return sdo={checkAuth:function(route,user){return route.access?route.access&&route.access.level>0&&!user?{response:!1,redirect:!0}:route.access.level>0&&(!user||user.roles<route.access.level)?{response:!1,redirect:!1}:{response:!0}:!0}}}]),services.factory("BookmarkService",["UserService","$http","LocalBookmarkService",function(UserService,$http,LocalBookmarkService){var service={pageLoad:function(next){var url="/api/user/"+UserService.user.id+"/bookmarks",promise=$http.get(url).then(function(response){var bookmarks=response.data;for(var i in bookmarks)LocalBookmarkService.addBookmark(bookmarks[i]);return"function"==typeof next&&next(),response.data},function(){return console.error("Can't retrieve bookmarks"),{}});return promise},getByCategory:function(idCategory,parent,cache,next){if(UserService.isLogged){if(LocalBookmarkService.getByCategory(idCategory,parent)===!1||cache===!1){var url="";url=parent?"/api/user/"+UserService.user.id+"/category/"+idCategory+"/parent/"+parent.id:"/api/user/"+UserService.user.id+"/category/"+idCategory+"/bookmarks";var promise=$http.get(url).then(function(response){return"function"==typeof next&&next(),response.data},function(){return console.error("Can't retrieve bookmarks"),{}});return promise.then(function(data){return LocalBookmarkService.setByCategory(idCategory,parent,data),data})}return"function"==typeof next&&next(LocalBookmarkService.getByCategory(idCategory,parent)),LocalBookmarkService.getByCategory(idCategory,parent)}return null},get:function(id,cache){if(UserService.isLogged){if(LocalBookmarkService.get(id)===!1||cache===!1){var promise=$http.get("/api/user/"+UserService.user.id+"/bookmark/"+id).then(function(response){return response.data},function(){return console.error("Can't retrieve bookmark"),{}});return promise.then(function(data){return LocalBookmarkService.setBookmark(data),data})}return LocalBookmarkService.get(id)}return null},post:function(bookmark){var promise=$http.post("/api/user/"+UserService.user.id+"/bookmark",bookmark).then(function(response){return response.data},function(){return console.error("Can't add a bookmark"),{}});return promise.then(function(data){return LocalBookmarkService.addBookmark(data)||console.error("can't refresh data after post bookmark"),data})},getParent:function(bookmark){return LocalBookmarkService.getParent(bookmark)},update:function(bookmark){var promise=$http.put("/api/user/"+UserService.user.id+"/bookmark",bookmark).then(function(response){return response.data},function(){return console.error("Can't update a bookmark"),{}});return promise},remove:function(bookmark){var promise=$http.delete("/api/user/"+UserService.user.id+"/bookmark/"+bookmark.id).then(function(response){return response},function(){return console.log("Error on removing the bookmark"),{}});return promise}};return service}]),services.factory("CategoryService",["UserService","LocalCategoryService","$http","LocalBookmarkService","resourceCache",function(UserService,LocalCategoryService,$http,LocalBookmarkService,resourceCache){var service={pageLoad:function(next){var url="/api/user/"+UserService.user.id+"/load",promise=$http({method:"GET",url:url,cache:resourceCache}).then(function(response){LocalCategoryService.categories=[],LocalBookmarkService.bookmarks=[];var categories=response.data;for(var i in categories){var category=categories[i];LocalCategoryService.addCategory(category);for(var b in category.bookmarks)LocalBookmarkService.addBookmark(category.bookmarks[b])}"function"==typeof next&&next(categories.length)},function(){return console.error("Can't retrieve bookmarks"),{}});return promise},getAll:function(next){return UserService.isLogged?(LocalCategoryService.getCategories()===!1?$http.get("/api/user/"+UserService.user.id+"/categories").success(function(data){"function"==typeof next&&next(data)}).error(function(){return console.error("Can't retrieve categories"),{}}):"function"==typeof next&&next(LocalCategoryService.getCategories()),void 0):null},get:function(id,cache){if(UserService.isLogged){if(LocalCategoryService.get(id)===!1||cache===!1){var promise=$http.get("/api/user/"+UserService.user.id+"/category/"+id).then(function(response){return response.data},function(){return console.error("Can't retrieve category"),{}});return promise.then(function(data){return LocalCategoryService.setCategory(data),data})}return LocalCategoryService.get(id)}return null},post:function(category){var promise=$http.post("/api/user/"+UserService.user.id+"/category",category).then(function(response){return response.data},function(){return console.error("Can't add a category"),{}});return promise.then(function(data){return LocalCategoryService.addCategory(data)||console.error("can't refresh data after post category"),data})},update:function(category){var promise=$http.put("/api/user/"+UserService.user.id+"/category",category).then(function(response){return response.data},function(){return console.error("Can't update a category"),{}});return promise},remove:function(category,next){var promise=$http.delete("/api/user/"+UserService.user.id+"/category/"+category.id).then(function(){LocalCategoryService.remove(category),next()},function(){console.error("Error on removing the category")});return promise}};return service}]),services.factory("LocalBookmarkService",[function(){var service={bookmarks:new Array,get:function(id){for(var cat in this.bookmarks)for(var parent in this.bookmarks[cat])for(var book in this.bookmarks[cat][parent])if(this.bookmarks[cat][parent][book].id==id)return this.bookmarks[cat][parent][book];return!1},getByCategory:function(idCategory,parent){return parent=parent?parent.id:"root",this.bookmarks[idCategory]&&this.bookmarks[idCategory][parent]?this.bookmarks[idCategory][parent]:!1},getParent:function(bookmark){for(var cat in this.bookmarks)for(var parent in this.bookmarks[cat])for(var book in this.bookmarks[cat][parent])if(this.bookmarks[cat][parent][book].id==bookmark.id)return this.bookmarks[cat][parent][book].parent?this.get(this.bookmarks[cat][parent][book].parent):"root"==parent?null:parent;return null},getDataset:function(){var out=[];for(var cat in this.bookmarks)for(var parent in this.bookmarks[cat]){"root"!=parent&&(parent=parseInt(parent));for(var book in this.bookmarks[cat][parent])2!=this.bookmarks[cat][parent][book].bookmark_type_id&&out.push({name:this.bookmarks[cat][parent][book].name,token:this.bookmarks[cat][parent][book].name.split(" "),category:parseInt(cat),parent:parent,url:this.bookmarks[cat][parent][book].url})}return out},setBookmark:function(bookmark){for(var cat in this.bookmarks)for(var parent in this.bookmarks[cat])for(var book in this.bookmarks[cat][parent])if(this.bookmarks[cat][parent][book].id==bookmark.id)return this.bookmarks[cat][parent][book]=bookmark,!0;return!1},setByCategory:function(idCategory,parent,bookmarks){parent=parent?parent.id:"root",this.bookmarks[idCategory]||(this.bookmarks[idCategory]=new Array),this.bookmarks[idCategory][parent]=bookmarks},addBookmark:function(bookmark){var idCategory=bookmark.category_id,parent=bookmark.parent;return parent=parent?parent:"root",this.bookmarks[idCategory]||(this.bookmarks[idCategory]=new Array),this.bookmarks[idCategory][parent]||(this.bookmarks[idCategory][parent]=new Array),this.bookmarks[idCategory][parent]?(this.bookmarks[idCategory][parent].push(bookmark),!0):!1}};return service}]),services.factory("LocalCategoryService",[function(){var service={categories:[],getCategories:function(){return[].concat(this.categories)},get:function(id){for(var i in this.categories)if(this.categories[i].id==id)return this.categories[i]},setCategories:function(categories){this.categories=categories},setCategory:function(category){for(var i in this.categories)this.categories[i].id==category.id&&(this.categories[i]=category)},addCategory:function(category){return this.categories.push(category),!0},remove:function(category){for(var i in this.categories)this.categories[i].id==category.id&&this.categories.splice(i,1)}};return service}]),services.service("modalService",["$modal","$q",function($modal,$q){var modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,template:"js/App/View/Bookmarks/partial/Modal/test.html"},modalOptions={};this.showModal=function(customModalDefaults,customModalOptions){return customModalDefaults||(customModalDefaults={}),customModalDefaults.backdrop="static",this.show(customModalDefaults,customModalOptions)},this.show=function(customModalDefaults,customModalOptions){var tempModalDefaults={},tempModalOptions={};angular.extend(tempModalDefaults,modalDefaults,customModalDefaults),angular.extend(tempModalOptions,modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function(){});var modalPromise=$modal(tempModalDefaults,customModalOptions);$q.when(modalPromise).then(function(modalEl){modalEl.modal("show")})}}]),services.factory("SearchEngineService",["UserService","$http","resourceCache",function(UserService,$http,resourceCache){var service={get:function(){if(UserService.isLogged){var promise=$http({method:"GET",url:"/api/user/"+UserService.user.id+"/searchengines",cache:resourceCache}).then(function(response){return response.data},function(){return console.error("Can't retrieve search engines"),{}});return promise}return null},getAll:function(){if(UserService.isLogged){var promise=$http.get("/api/searchengines").then(function(response){return response.data},function(){return console.error("Can't retrieve all search engines"),{}});return promise}return null},save:function(engines){var promise=$http.post("/api/user/"+UserService.user.id+"/searchengines",engines).then(function(response){return response.data},function(){return console.error("Can't save search engines"),{}});return promise}};return service}]),services.factory("UserService",["$http","$location","$q","$timeout",function($http,$location,$q){var service={isLogged:!1,user:null,isFinished:!1,log:function(){var defer=$q.defer(),config={method:"GET",url:"/api/islogged"};return $http(config).success(function(data,status){if(data&&200==status){service.isLogged=!0,service.user=data;var redirect="/";$location.search().redirect&&(redirect=$location.search().redirect),$location.path(redirect).search({})}else service.isLogged=!1,service.user=null;this.isFinished=!0,defer.resolve()}).error(function(data){service.isLogged=!1,service.user=null,this.isFinished=!0,defer.reject(data)}),defer.promise}};return service}]),services.factory("$modal",["$rootScope","$compile","$http","$timeout","$q","$templateCache","$controller",function($rootScope,$compile,$http,$timeout,$q,$templateCache,$controller){var ModalFactory=function(config,params){function Modal(config,params){var options=angular.extend({show:!0},{},config),scope=options.scope?options.scope:$rootScope.$new(),templateUrl=options.template;return $q.when($templateCache.get(templateUrl)||$http.get(templateUrl,{cache:!0}).then(function(res){return res.data})).then(function(template){var id=templateUrl.replace(".html","").replace(/[\/|\.|:]/g,"-")+"-"+scope.$id,$modal=$('<div class="modal hide" tabindex="-1"></div>').attr("id",id).addClass("fade").html(template);options.modalClass&&$modal.addClass(options.modalClass);var ctrlInstance,ctrlLocals={};if(config.controller){for(var key in params)scope[key]=params[key];ctrlLocals.$scope=scope,ctrlLocals.$modalInstance=$modal,ctrlInstance=$controller(config.controller,ctrlLocals)}return $("body").append($modal),scope.modal={},$timeout(function(){$compile($modal)(scope)}),scope.$modal=function(name){$modal.modal(name)},angular.forEach(["show","hide"],function(name){scope[name]=function(){$modal.modal(name)}}),scope.dismiss=scope.hide,angular.forEach(["show","shown","hide","hidden"],function(name){$modal.on(name,function(ev){scope.$emit("modal-"+name,ev)})}),$modal.on("shown.bs.modal",function(){$("input[autofocus], textarea[autofocus]",$modal).first().trigger("focus")}),$modal.on("hide.bs.modal",function(){options.persist||scope.$destroy()}),scope.$on("$destroy",function(){$modal.remove()}),$modal.modal(options),$modal})}return new Modal(config,params)};return ModalFactory}]).directive("bsModal",function($q,$modal){return{restrict:"A",scope:!0,link:function(scope,iElement,iAttrs){var options={template:scope.$eval(iAttrs.bsModal),persist:!0,show:!1,scope:scope};angular.forEach(["modalClass","backdrop","keyboard"],function(key){angular.isDefined(iAttrs[key])&&(options[key]=iAttrs[key])}),$q.when($modal(options)).then(function(modal){iElement.attr("data-target","#"+modal.attr("id")).attr("data-toggle","modal")})}}}),controllers.controller("BookmarkController",["$rootScope","$scope","BookmarkService","CategoryService","modalService","LocalCategoryService","LocalBookmarkService","$q",function($rootScope,$scope,BookmarkService,CategoryService,modalService,LocalCategoryService,LocalBookmarkService,$q){$scope.currentParent=null,$scope.backElement=null,$scope.loadBookmarks=function(cache){var next=$scope.mansory;$rootScope.initStep>1&&($rootScope.initStep--,next=null),$scope.category&&($scope.bookmarks=BookmarkService.getByCategory($scope.category.id,$scope.currentParent,cache,next)),1==$rootScope.initStep&&($scope.mansory(),$rootScope.initStep=0)},$scope.loadBookmarks(),$rootScope.$watch("pageLoad",function(){$rootScope.pageLoad===!1&&$scope.category&&$scope.category.id&&$scope.loadBookmarks()}),$scope.$on("RefreshBookmarks2",function(e,args){e.preventDefault(),args==$scope.category.id&&$scope.loadBookmarks(!1)}),$scope.$on("RefreshMansory",function(e){e.preventDefault(),$scope.mansory()}),$scope.postBookmark=function(bookmark,callback){bookmark.position=BookmarkService.getByCategory(bookmark.category_id,$scope.currentParent,!0,$scope.mansory).length,BookmarkService.post(bookmark).then(function(data){data.id?callback.call(null):console.error("Error on adding this bookmark")})};var postBookmark=$scope.postBookmark,saveBookmark=function(bookmark){return BookmarkService.update(bookmark).then(function(){return $scope.loadBookmarks(!1),bookmark.category_id!=$scope.category.id&&$scope.$emit("RefreshBookmarks",bookmark.category_id),$scope.bookmarks})};$scope.saveBookmark=saveBookmark,$scope.setParent=function(parent){parent&&($scope.backElement=BookmarkService.getParent(parent)),$scope.currentParent=parent,$scope.loadBookmarks()},$scope.editBookmark=function(bookmark){var modalController=function($scope,$modalInstance){$scope.save=function(){saveBookmark($scope.bookmark).then(function(){$modalInstance.modal("hide")})},$modalInstance.on("hide.bs.modal",function(){BookmarkService.get($scope.bookmark.id,!1)})},template="js/App/View/Bookmarks/partial/Modal/editFolder.html",title="Edit a folder";1==bookmark.bookmark_type_id&&(template="js/App/View/Bookmarks/partial/Modal/editBookmark.html",title="Edit a bookmark");var modalDefault={template:template,controller:modalController};CategoryService.getAll(function(categories){var modalOptions={bookmark:bookmark,categories:categories,title:title};modalService.showModal(modalDefault,modalOptions)})},$scope.addFolder=function(idCategory,parent){var modalController=function($scope,$modalInstance){$scope.save=function(){postBookmark($scope.bookmark,function(){$modalInstance.modal("hide")})},$modalInstance.on("hide.bs.modal",function(){BookmarkService.getByCategory(idCategory,parent,!1)})},modalDefault={template:"js/App/View/Bookmarks/partial/Modal/editFolder.html",controller:modalController},bookmark={};bookmark.bookmark_type_id=2,bookmark.category_id=idCategory,parent&&(bookmark.parent=parent.id);var modalOptions={bookmark:bookmark,title:"Create a folder"};modalService.showModal(modalDefault,modalOptions)},$scope.removeBookmark=function(bookmark){var bookmark=$scope.deleteBookmark;2==bookmark.bookmark_type_id?removeFolder(bookmark).then(function(){deleteBookmark(bookmark)},function(){$scope.loadBookmarks()}):deleteBookmark(bookmark)};var removeFolder=function(){var deferrerd=$q.defer(),modalController=function($scope,$modalInstance){$scope.confirm=function(){deferrerd.resolve(),$modalInstance.modal("hide")},$scope.cancel=function(){$modalInstance.modal("hide")},$modalInstance.on("hide.bs.modal",function(){deferrerd.reject()})},modalDefault={template:"js/App/View/Bookmarks/partial/Modal/confirmBox.html",controller:modalController},modalOptions={title:"Warning",content:"This is a folder, every bookmarks it contain will be removed."};return modalService.showModal(modalDefault,modalOptions),deferrerd.promise},deleteBookmark=function(bookmark){var parent,idCategory=bookmark.category_id;bookmark.parent&&(parent=BookmarkService.get(bookmark.parent)),BookmarkService.remove(bookmark).then(function(){BookmarkService.getByCategory(idCategory,parent,!1)})}}]),controllers.controller("CategoryController",["$rootScope","$scope","CategoryService","modalService","$q","BookmarkService",function($rootScope,$scope,CategoryService,modalService,$q){$scope.loadCategory=function(){CategoryService.getAll(function(data){$scope.categories=data,$scope.favorite=$scope.categories[0],$scope.categories=data.splice(1)})};var loadCategory=$scope.loadCategory;$scope.pageLoad=function(){var next=function(categoryLength){$rootScope.initStep=categoryLength,$scope.loadCategory()};CategoryService.pageLoad(next)},$scope.pageLoad(),$scope.$on("RefreshBookmarks",function(e,args){e.stopPropagation(),$scope.$broadcast("RefreshBookmarks2",args)}),$scope.addCategory=function(){var modalController=function($scope,$modalInstance){$scope.save=function(){postCategory($scope.category,function(){$modalInstance.modal("hide"),loadCategory()})}},template="js/App/View/Bookmarks/partial/Modal/editCategory.html",title="Add a category",modalDefault={template:template,controller:modalController},category={},modalOptions={category:category,title:title};modalService.showModal(modalDefault,modalOptions)},$scope.postCategory=function(category,callback){CategoryService.post(category).then(function(data){data.id?callback.call(null):console.error("Error on adding this category")})};var postCategory=$scope.postCategory,saveCategory=function(category){return CategoryService.update(category).then(function(){})};$scope.saveCategory=saveCategory,$scope.removeCategory=function(category){confirmDelete(category).then(function(){CategoryService.remove(category,function(){$scope.loadCategory(),$scope.$broadcast("RefreshMansory")})})};var confirmDelete=function(){var deferrerd=$q.defer(),modalController=function($scope,$modalInstance){$scope.confirm=function(){deferrerd.resolve(),$modalInstance.modal("hide")},$scope.cancel=function(){$modalInstance.modal("hide")},$modalInstance.on("hide.bs.modal",function(){deferrerd.reject()})
},modalDefault={template:"js/App/View/Bookmarks/partial/Modal/confirmBox.html",controller:modalController},modalOptions={title:"Warning",content:"This is a category, every bookmarks it contain will be removed."};return modalService.showModal(modalDefault,modalOptions),deferrerd.promise}}]),controllers.controller("FavoriteController",["$rootScope","$scope","BookmarkService",function($rootScope,$scope,BookmarkService){$scope.loadBookmarks=function(cache){$scope.bookmarks=BookmarkService.getByCategory($scope.category.id,$scope.currentParent,cache)},$scope.$watch("favorite",function(){$scope.favorite&&$scope.favorite.id&&($scope.category=$scope.favorite,$scope.loadBookmarks())});var saveBookmark=function(bookmark){return 1==bookmark.bookmark_type_id?BookmarkService.update(bookmark).then(function(){return $scope.loadBookmarks(!1),bookmark.category_id!=$scope.category.id&&$scope.$emit("RefreshBookmarks",bookmark.category_id),$scope.bookmarks}):void 0};$scope.saveBookmark=saveBookmark}]),controllers.controller("LoginController",["$scope","$http","$location","UserService",function($scope,$http,$location,UserService){$scope.user={login:"",password:"",remember:!1},$scope.loginError=!1;var config={method:"POST",url:"/api/login",data:$scope.user};$scope.loginFn=function(autolog){autolog&&(config.data.autolog=!0),$http(config).success(function(data,status){if(data&&200==status){UserService.isLogged=!0,UserService.user=data;var redirect="/";$location.search().redirect&&(redirect=$location.search().redirect),$location.path(redirect).search({})}else UserService.isLogged=!1,UserService.user=null,autolog||($scope.loginError=!0)}).error(function(){UserService.isLogged=!1,UserService.user=null,autolog||($scope.loginError=!0)})}}]),controllers.controller("LogoutController",["$scope","$http","$location","UserService",function($scope,$http,$location,UserService){$http.get("/api/logout").success(function(){UserService.isLogged=!1,UserService.user=null,$location.path("/login")}).error(function(){UserService.isLogged=!1,UserService.user=null,$scope.loginError=!0})}]),controllers.controller("MainController",["$scope","UserService","modalService",function($scope,UserService,modalService){$scope.user=UserService.user,$scope.editSettings=function(){var template="js/App/View/Bookmarks/partial/Modal/editSettings.html",modalDefault={template:template,controller:UserSettingsController};modalService.showModal(modalDefault,{})}}]),controllers.controller("RegisterController",["$scope","$http","$location","UserService",function($scope,$http,$location,UserService){$scope.user={login:"",password:"",remember:!1},$scope.loginError=!1;var config={method:"POST",url:"/api/register",data:$scope.user};$scope.registerFn=function(){return $scope.user.password!=$scope.user.password2?!1:($http(config).success(function(data,status){if(data&&200==status&&"OK"==data){var redirect="/";$location.search().redirect&&(redirect=$location.search().redirect),$location.path(redirect).search({})}else $scope.loginError=!0}).error(function(){UserService.isLogged=!1,UserService.user=null,$scope.loginError=!0}),void 0)}}]),controllers.controller("SearchEngineController",["$scope","SearchEngineService","$window","LocalBookmarkService","CategoryService","BookmarkService","$timeout",function($scope,SearchEngineService,$window,LocalBookmarkService,CategoryService,BookmarkService,$timeout){$scope.search={value:""},$scope.hint=!1;var dataset={};$scope.refreshDataset=function(){dataset=LocalBookmarkService.getDataset()},$scope.removeDataset=function(){};var mySort=function(a,b){return a.score-b.score};$scope.searchBookmarkFn=function(term){if(term.length>0){var count=0,tmp=[].concat(dataset),cross=crossfilter(tmp),dimension=cross.dimension(function(d){return d}),scored=dimension.filter(function(book){var oldJ,search=term.toUpperCase(),text=book.name.toUpperCase(),j=0;if(book.score=0,book.matches=[],search==text)return book.display='<span class="highlight">'+book.name+"</span>",!0;book.score=1;for(var i=0;i<search.length;i++){var l=search[i];if(" "!=l){if(i>0&&search[i-1]==search[i]&&j++,j=text.indexOf(l,j),-1==j)return!1;book.matches.push(j),oldJ&&(book.score+=j-oldJ==1?0:j-oldJ),0==i&&(0==j?book.score:book.score+=1),oldJ=j}}return book.score+=(text.length-search.length)/10,count++,!0}),results=scored.top(tmp.length).sort(mySort).slice(0,10);for(var i in results){var book=results[i];if(book.score>0){book.matches.reverse(),book.display=book.name.split("");for(var i in book.matches){var j=book.matches[i];book.display.splice(j+1,0,"</span>"),book.display.splice(j,0,'<span class="highlight">')}book.display=book.display.join("")}if("string"!=typeof book.category)if(0==book.category)book.category="Favorites";else{var cat=CategoryService.get(book.category);cat?(book.category=cat.name,"__default"==cat.name&&(book.category="Favorites")):book.category="Can't find category"}if(book.parent&&"root"!=book.parent&&"string"!=typeof book.parent){var parent=BookmarkService.get(book.parent);parent&&(book.parentName=parent.name)}}$scope.results=results}else $scope.results=[]};var getSearchEngines=function(){SearchEngineService.get().then(function(data){$scope.searchEngines=data;var tmpDefault=$scope.searchEngines.filter(function(value){return value.default})[0];$scope.setSelectedSearchEngine(tmpDefault)})};getSearchEngines(),$scope.$on("refreshSearchEngine",function(){getSearchEngines()}),$scope.searchFn=function(book){if(!$scope.searchBookmark){$scope.search.value||($scope.search.value="");var url=$scope.selectedSearchEngine.url.replace("{q}",$scope.search.value);$window.open(url)}$scope.searchBookmark&&book&&book.url&&$window.open(book.url)},$scope.setSelectedSearchEngine=function(searchEngine){$scope.selectedSearchEngine=searchEngine,$scope.searchBookmark="bookmarks"==$scope.selectedSearchEngine.url?!0:!1,$timeout(function(){$(".input-search:visible").focus()})}}]);var UserSettingsController=function($rootScope,$scope,$modalInstance,LocalBookmarkService,SearchEngineService){$scope.userSearchEngines=null,$scope.searchEngines=null,SearchEngineService.get().then(function(data){$scope.userSearchEngines=data,$scope.defaultSearchEngine=$scope.userSearchEngines.filter(function(value){return value.default})[0]}),SearchEngineService.getAll().then(function(data){$scope.searchEngines=data}),$scope.$watch("userSearchEngines",function(){refresh()}),$scope.$watch("searchEngines",function(){refresh()});var refresh=function(){if($scope.userSearchEngines&&$scope.searchEngines&&$scope.userSearchEngines.length>0&&$scope.searchEngines.length>0)for(var i in $scope.searchEngines){var searchEngine=$scope.searchEngines[i],found=$scope.userSearchEngines.filter(function(s){return s.id==searchEngine.id});$scope.searchEngines[i].selected=found.length>0?!0:!1,$scope.searchEngines[i].default=searchEngine.id==$scope.defaultSearchEngine.id?1:0}};$scope.toggleSearchEngine=function(searchEngine){if(!searchEngine.selected)return searchEngine.selected=!0,!0;var selectedEngines=$scope.searchEngines.filter(function(s){return s.selected});selectedEngines.length>1&&(searchEngine.default=0,searchEngine.selected=!1),2==selectedEngines.length&&($scope.searchEngines.filter(function(s){return s.selected})[0].default=!0)},$scope.toggleDefaultSearchEngine=function(searchEngine){for(var i in $scope.searchEngines)$scope.searchEngines[i].default=0,$scope.searchEngines[i].id==searchEngine.id&&($scope.searchEngines[i].default=1)},$scope.save=function(){var selectedSearchEngine=[],defaultEngine=$scope.searchEngines.filter(function(s){return s.default});if(0==defaultEngine.length)return $scope.errorDefault=!0,!1;for(var i in $scope.searchEngines){var engine=$scope.searchEngines[i];engine.selected&&selectedSearchEngine.push(engine)}SearchEngineService.save(selectedSearchEngine).then(function(){$modalInstance.modal("hide"),$rootScope.$broadcast("refreshSearchEngine")})}};bookmarkApp.config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"js/App/View/Bookmarks/mainView.html",controller:"MainController",access:{level:1},resolve:{func:["UserService",function(UserService){return UserService.log()}]}}).when("/login",{templateUrl:"js/App/View/login.html",controller:"LoginController",access:{level:0}}).when("/logout",{templateUrl:"js/App/View/login.html",controller:"LogoutController",access:{level:0}}).when("/register",{templateUrl:"js/App/View/register.html",controller:"RegisterController",access:{level:0}}).otherwise({redirectTo:"/"})}]),bookmarkApp.run(["$rootScope","AuthService","UserService","$location",function(root,auth,UserService,location){root.$on("$routeChangeStart",function(scope,currView,prevView){if(UserService.isFinished){var authorization=auth.checkAuth(currView,UserService.user);if(!authorization.response){var page=location.path();if(authorization.redirect)location.path("/login").search({redirect:page});else{var previous="/";prevView||(previous=prevView),location.path(previous),console.error("Auth error")}}}})}]),bookmarkApp.config(["$httpProvider",function($httpProvider){$httpProvider.responseInterceptors.push(function($q,$location){return function(promise){return promise.then(function(response){return response},function(response){return 401===response.status&&"/login"!=$location.path()&&$location.url("/login"),$q.reject(response)})}})}]),angular.module("bookmarkApp").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("js/App/View/Bookmarks/mainView.html",'<div id=top-bar><h1 class=title>{{user.username}}\'s <span class=light>bookmarks</span></h1><ul id=user-settings><li><a ng-click=editSettings()><img src=../img/btns/parameters.png></a></li><li><a href=/#/logout><img src=../img/btns/exit.png></a></li><li></li></ul></div><div class=search-engine-list-general><ng-include src="\'js/App/View/Bookmarks/searchEnginesList.html\'" ng-controller=SearchEngineController></ng-include></div><hr><div class=categories-list-general ng-controller=CategoryController ng-cloak=""><div class=favorite-category><ul class="favorite-list connection" ng-class="{favoritesEmpty: bookmarks.length==0}" ng-controller=FavoriteController sortable=connection save=saveBookmark(bookmark) data-category={{favorite.id}}><li ng-repeat="bookmark in bookmarks" class="favorite-bookmark bookmark" bookmarkel=false data-bookmark={{bookmark.id}}></li></ul><div class=clr></div></div><div class=categories-actions><a ng-click=addCategory()>Add a category</a></div><ul class=categories-list mansory=255><li class=category-li ng-repeat="category in categories" ng-controller=BookmarkController><div class=category-general><div class=category-header><h2 categoryedit="">{{category.name}}</h2><div class=category-action><a ng-click="addFolder(category.id, currentParent)" style="display: none"><img src=/img/bookmark/folder.png></a> <a ng-click=removeCategory(category)><img src=/img/btns/croix.png></a> <a class=add-bookmark ng-click="showAdd = !showAdd"><img src=/img/btns/new-bookmark.png></a><div class=clr></div></div><div class=clr></div></div><hr><div class=bookmarks-list-general><div addbookmark="" categoryid=category.id postbookmark="postBookmark(newBookmark, callback)" showadd=showAdd parent=currentParent></div><ul class="bookmarks-list connection" ng-class="{folder: currentParent!=undefined}" sortable=connection save=saveBookmark(bookmark) data-category={{category.id}} loadbookmark=loadBookmarks()><li ng-show=currentParent class=bookmark-back><a href="" ng-click=setParent(backElement)>{{currentParent.name|truncate:24}}</a></li><li ng-repeat="bookmark in bookmarks" class=bookmark bookmarkel="" data-bookmark={{bookmark.id}}></li></ul></div></div></li></ul></div><ul class="bin connection" sortable=connection remove=removeBookmark() ng-controller=BookmarkController><li></li></ul>'),$templateCache.put("js/App/View/Bookmarks/partial/Modal/confirmBox.html",'<div class=modal-header><h3>{{title}}</h3><button type=button class=close data-dismiss=modal aria-hidden=true>×</button></div><div class=modal-body>{{content}}</div><div class=modal-action><button type=button class="btn cancel" ng-click=cancel()>Cancel</button> <button type=button class=btn ng-click=confirm()>Confirm</button></div>'),$templateCache.put("js/App/View/Bookmarks/partial/Modal/editBookmark.html",'<div class=modal-header><h3>{{title}}</h3><button type=button class=close data-dismiss=modal aria-hidden=true>×</button></div><div class=modal-body><form ng-submit=save()><div class=edit-bookmark-group><label>Name :<input type=text class=edit-bookmark-name ng-model=bookmark.name placeholder=Name autofocus=autofocus></label></div><div class=edit-bookmark-group><label>Url :<input type=text class=edit-bookmark-url ng-model=bookmark.url placeholder=Url type=url></label></div><div class=edit-bookmark-group><label>Category :<select ng-model=bookmark.category_id ng-options="c.id as c.name for c in categories"></select></label></div><div class=modal-action><button type=submit class=btn>Save</button></div></form></div>'),$templateCache.put("js/App/View/Bookmarks/partial/Modal/editCategory.html","<div class=modal-header><h3>{{title}}</h3><button type=button class=close data-dismiss=modal aria-hidden=true>×</button></div><div class=modal-body><form ng-submit=save()><div class=edit-category-group><label>Name :<input type=text class=edit-category-name ng-model=category.name placeholder=Name autofocus=autofocus></label></div><div class=modal-action><button class=btn type=submit>Save</button></div></form></div>"),$templateCache.put("js/App/View/Bookmarks/partial/Modal/editFolder.html",'<div class=modal-header><h3>{{title}}</h3><button type=button class=close data-dismiss=modal aria-hidden=true>×</button></div><div class=modal-body><form ng-submit=save()><div class=edit-bookmark-group><label>Name :<input type=text class=edit-bookmark-name ng-model=bookmark.name placeholder=Name autofocus=autofocus></label></div><div class=edit-bookmark-group><label>Category :<select ng-model=bookmark.category_id ng-options="c.id as c.name for c in categories"></select></label></div><div class=modal-action><button type=submit class=btn>Save</button></div></form></div>'),$templateCache.put("js/App/View/Bookmarks/partial/Modal/editSettings.html","<div class=modal-header><h3>Moteurs de recherche</h3><p class=subtitle>Cliquez sur l'icone d'un moteur pour l'activer, ou le désactiver, de votre page de bookmarks. Sélectionnez aussi votre moteur de recherche par défaut.</p><button type=button class=close data-dismiss=modal aria-hidden=true>×</button></div><div class=modal-body><form ng-submit=save()><div class=modal-center-content><div class=edit-searchEngine-group><div ng-repeat=\"searchEngine in searchEngines\" class=search-engine-selection><img ng-show=searchEngine.selected ng-click=toggleSearchEngine(searchEngine) ng-src=/img/search-engines/on/{{searchEngine.logo}}> <img ng-show=!searchEngine.selected ng-click=toggleSearchEngine(searchEngine) ng-src=/img/search-engines/off/{{searchEngine.logo}}><br><input id=engine{{searchEngine.id}} type=radio name=default ng-show=searchEngine.selected ng-click=toggleDefaultSearchEngine(searchEngine) ng-model=searchEngine.default value=1><label for=engine{{searchEngine.id}}></label></div></div></div><div ng-show=errorDefault>Sélectionnez un moteur de recherche par défault.</div><div class=clr></div><hr><div class=modal-action><button type=submit class=btn>Sauvegarder</button></div></form></div>"),$templateCache.put("js/App/View/Bookmarks/searchEnginesList.html",'<div class=search-engine-list><div class=search-engine-list-int><searchengineshortcut submit=setSelectedSearchEngine(searchEngine) searchengines=searchEngines hint=hint></searchengineshortcut><div ng-repeat="searchEngine in searchEngines" class=search-engine ng-class="{selected: selectedSearchEngine.id==searchEngine.id}"><div class=hint ng-show=hint>{{$index + 1}}</div><img class=engine-on ng-src=/img/search-engines/on/{{searchEngine.logo}} alt={{searchEngine.name}} ng-click=setSelectedSearchEngine(searchEngine)> <img class=engine-off ng-src=/img/search-engines/off/{{searchEngine.logo}} alt={{searchEngine.name}} ng-click=setSelectedSearchEngine(searchEngine)></div><form ng-submit=searchFn() class=form-search><div ng-show=!searchBookmark><input type=text class=input-search ng-model=search.value ng-change=setSearchBookmark() active=searchBookmark focus=""><div id=reset-field ng-click="search.value=\'\'" ng-show="search.value!=\'\'">&times</div></div><div ng-show=searchBookmark><typeahead items=results term=search.value search=searchBookmarkFn(term) select=searchFn focus=refreshDataset() blur=removeDataset()><div id=reset-field ng-click="search.value=\'\'" ng-show="search.value!=\'\'">&times</div><ul class=search-bookmark-results-list><li class=search-bookmark-result ng-repeat="result in results" typeahead-item=result><div class=left><img ng-src="http://www.google.com/s2/favicons?domain={{result.url|removeHTTP}}" height=16 width=16></div><div><p ng-bind-html-unsafe=result.display></p><p class=cat>{{result.category}}<span ng-show=result.parentName>/ {{result.parentName}}</span></p><small>{{result.url|truncate:55}}</small><div class=clr></div></div></li></ul></typeahead></div><button class=btn-search type=submit><i></i></button></form></div></div>'),$templateCache.put("js/App/View/login.html",'<div class=login-form-general><div class=login-form><h1>Login</h1><form method=post ng-submit=loginFn()><div class=form-input><div class=form-group><label><input type=text ng-model=user.login placeholder=Login class=input-login></label><label><input type=password ng-model=user.password placeholder=password class=input-password></label></div><div class=form-error ng-show=loginError>Login or password is incorrect</div><div class=form-group><label><input type=checkbox name=remember ng-model=user.remember class=input-remember>Remember me ?</label></div></div><div class=form-action><button type=submit class="submit login">Login</button> <a class=register-link href=/#/register title=Register>Register</a></div></form></div></div>'),$templateCache.put("js/App/View/register.html",'<div class=register-form-general><div class=register-form><h1>Register</h1><form name=registerForm method=post ng-submit=registerFn()><div class=form-input><div class=form-group><label><input type=text name=login ng-model=user.login placeholder=Login class=input-login ng-minlength=3 ng-maxlength=30 ng-pattern=/^[A-z][A-z0-9]*$/ required=""><span class=form-error ng-show="!registerForm.login.$error.minLength && !registerForm.login.$error.maxLength && registerForm.login.$error.pattern && registerForm.login.$dirty">Must start with a letter, and contain letters &amp; numbers only.</span> <span class=form-error ng-show="!registerForm.login.$error.required && (registerForm.login.$error.minlength || registerForm.login.$error.maxlength) && registerForm.login.$dirty">Username ust be between 3 and 30 characters.</span></label><label><input type=email name=email ng-model=user.email placeholder=Email class=input-email required=""><span ng-show="!registerForm.email.$error.required && registerForm.email.$error.email && registerForm.email.$dirty">invalid email</span></label><label><input type=password id=pwd1 ng-model=user.password placeholder=password class=input-password required=""></label><label><input type=password pw-check=pwd1 name=pwd2 ng-model=user.password2 placeholder=password class=input-password required=""><span class=msg-error ng-show=registerForm.pwd2.$error.pwmatch>passwords don\'t match.</span></label></div><div class=form-error ng-show=loginError>Error during registration (please check your data)</div></div><div class=form-action><button type=submit class="submit register">Register</button></div></form></div></div>')}]);